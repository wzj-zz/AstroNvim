---@type LazySpec
return {
  "nvim-treesitter/nvim-treesitter",
  opts = {
    ensure_installed = {
      "lua",
      "vim",
      "bash",
      "zig",
      "ql",
      "rust",
      "c_sharp",
      "python",

      "asm",
      "nasm",

      "c",
      "cpp",
      "objc",
      "cuda",
      "proto",
      "cmake",

      "go",
      "gomod",
      "gosum",
      "gowork",

      "java",
      "javadoc",

      "javascript",
      "typescript",
      "tsx",
      "jsdoc",

      "json",
      "jsonc",

      "xml",
      "toml",
      "yaml",
      "html",

      "markdown",
      "markdown_inline",
    },
    textobjects = {
      select = {
        enable = true,
        lookahead = true,
        keymaps = {
          ["ak"] = { query = "@block.outer", desc = "around block" },
          ["ik"] = { query = "@block.inner", desc = "inside block" },
          ["af"] = { query = "@function.outer", desc = "around function " },
          ["if"] = { query = "@function.inner", desc = "inside function " },
          ["aa"] = { query = "@parameter.outer", desc = "around argument" },
          ["ia"] = { query = "@parameter.inner", desc = "inside argument" },
          ["as"] = { query = "@call.outer", desc = "around callsite" },
          ["is"] = { query = "@call.inner", desc = "inside callsite" },
          ["ar"] = { query = "@return.outer", desc = "around return" },
          ["ir"] = { query = "@return.inner", desc = "inside return" },
          ["av"] = { query = "@conditional.outer", desc = "around conditional" },
          ["iv"] = { query = "@conditional.inner", desc = "inside conditional" },
          ["al"] = { query = "@loop.outer", desc = "around loop" },
          ["il"] = { query = "@loop.inner", desc = "inside loop" },
          ["az"] = { query = "@class.outer", desc = "around class" },
          ["iz"] = { query = "@class.inner", desc = "inside class" },
          ["an"] = { query = "@assignment.outer", desc = "around assignment" },
          ["in"] = { query = "@assignment.inner", desc = "inside assignment" },
          ["ah"] = { query = "@number.inner", desc = "around number" },
          ["ih"] = { query = "@number.inner", desc = "inside number" },
        },
      },
      move = {
        enable = true,
        set_jumps = true,
        goto_next_start = {
          ["<M-x>"] = { query = "@block.outer", desc = "Next block start" },
          ["<M-N>"] = { query = "@function.outer", desc = "Next function start" },
          ["<M-l>"] = { query = "@call.outer", desc = "Next callsite start" },
          ["<M-v>"] = { query = "@conditional.outer", desc = "Next conditional start" },
          ["<M-g>"] = { query = "@loop.outer", desc = "Next loop start" },
          ["<M-z>"] = { query = "@class.outer", desc = "Next class start" },
          ["<M-t>"] = { query = "@number.inner", desc = "Next number" },

          ["]k"] = { query = "@block.outer", desc = "Next block start" },
          ["]f"] = { query = "@function.outer", desc = "Next function start" },
          ["]a"] = { query = "@parameter.inner", desc = "Next argument start" },
          ["]s"] = { query = "@call.outer", desc = "Next callsite start" },
          ["]r"] = { query = "@return.outer", desc = "Next return start" },
          ["]v"] = { query = "@conditional.outer", desc = "Next conditional start" },
          ["]g"] = { query = "@loop.outer", desc = "Next loop start" },
          ["]z"] = { query = "@class.outer", desc = "Next class start" },
          ["]n"] = { query = "@assignment.rhs", desc = "Next assignment rhs" },
          ["]h"] = { query = "@number.inner", desc = "Next number" },
          ["]]"] = { query = "@comment.outer", desc = "Next comment start" },
        },
        goto_next_end = {
          ["<M-B>"] = { query = "@block.outer", desc = "Next block end" },
          ["<M-E>"] = { query = "@function.outer", desc = "Next function end" },
          ["<M-.>"] = { query = "@parameter.inner", desc = "Next argument end" },

          ["]K"] = { query = "@block.outer", desc = "Next block end" },
          ["]F"] = { query = "@function.outer", desc = "Next function end" },
          ["]A"] = { query = "@parameter.inner", desc = "Next argument end" },
          ["]Z"] = { query = "@class.outer", desc = "Next class end" },
        },
        goto_previous_start = {
          ["<M-X>"] = { query = "@block.outer", desc = "Previous block start" },
          ["<M-P>"] = { query = "@function.outer", desc = "Previous function start" },
          ["<M-b>"] = { query = "@parameter.inner", desc = "Previous argument start" },
          ["<M-h>"] = { query = "@call.outer", desc = "Previous callsite start" },
          ["<M-V>"] = { query = "@conditional.outer", desc = "Previous conditional start" },
          ["<M-G>"] = { query = "@loop.outer", desc = "Previous loop start" },
          ["<M-Z>"] = { query = "@class.outer", desc = "Previous class start" },
          ["<M-T>"] = { query = "@number.inner", desc = "Previous number" },

          ["[k"] = { query = "@block.outer", desc = "Previous block start" },
          ["[f"] = { query = "@function.outer", desc = "Previous function start" },
          ["[a"] = { query = "@parameter.inner", desc = "Previous argument start" },
          ["[s"] = { query = "@call.outer", desc = "Previous callsite start" },
          ["[r"] = { query = "@return.outer", desc = "Previous return start" },
          ["[v"] = { query = "@conditional.outer", desc = "Previous conditional start" },
          ["[g"] = { query = "@loop.outer", desc = "Previous loop start" },
          ["[z"] = { query = "@class.outer", desc = "Previous class start" },
          ["[n"] = { query = "@assignment.lhs", desc = "Previous assignment lhs" },
          ["[h"] = { query = "@number.inner", desc = "Previous number" },
          ["[["] = { query = "@comment.outer", desc = "Previous comment start" },
        },
        goto_previous_end = {
          ["<M-,>"] = { query = "@parameter.inner", desc = "Previous argument end" },

          ["[K"] = { query = "@block.outer", desc = "Previous block end" },
          ["[F"] = { query = "@function.outer", desc = "Previous function end" },
          ["[A"] = { query = "@parameter.inner", desc = "Previous argument end" },
          ["[Z"] = { query = "@class.outer", desc = "Previous class end" },
        },
      },
      swap = {
        enable = true,
        swap_next = {
          [">K"] = { query = "@block.outer", desc = "Swap next block" },
          [">F"] = { query = "@function.outer", desc = "Swap next function" },
          [">A"] = { query = "@parameter.inner", desc = "Swap next argument" },
        },
        swap_previous = {
          ["<K"] = { query = "@block.outer", desc = "Swap previous block" },
          ["<F"] = { query = "@function.outer", desc = "Swap previous function" },
          ["<A"] = { query = "@parameter.inner", desc = "Swap previous argument" },
        },
      },
    },
  },
}
